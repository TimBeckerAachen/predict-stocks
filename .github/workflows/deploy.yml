name: CD-Deploy
on:
  push:
    branches:
      - 'main'

permissions:
    id-token: write
    contents: read

env:
  LAMBDA_PATH: ../predict-stocks/src/predict_lambda/

jobs:
  deploy-infra:
    if: contains('["TimBeckerAachen"]', github.actor)
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set Prefect credentials and lambda path in vars file
        working-directory: 'infrastructure'
        run: |
          sed -i 's/replace_prefect_key/${{ secrets.PREFECT_API_KEY }}/g' vars/prod.tfvars \
          sed -i 's/replace_prefect_url/${{ secrets.PREFECT_API_URL }}/g' vars/prod.tfvars \
          sed -i 's/replace_lambda_path/${{ env.LAMBDA_PATH }}lambda_function.zip/g' vars/prod.tfvars
      - name: zip lambda with requirements
        working-directory: 'infrastructure'
        run: |
          cd ${{ env.LAMBDA_PATH }} \
          mkdir package \
          pip install --target ./package -r ../../../requirements.txt \
          cd package \
          zip -r ../lambda_function.zip . \
          cd .. \
          zip lambda_function.zip index.py
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::411847045573:role/github-role-stock-project
          role-session-name: predict-stocks-deployment
          aws-region: "eu-west-1"
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: TF plan
        id: tf-plan
        working-directory: 'infrastructure'
        run: |
          terraform init -backend-config="key=predict-stocks-prod.tfstate" -reconfigure
      - name: TF Apply
        id: tf-apply
        working-directory: 'infrastructure'
        if: ${{ steps.tf-plan.outcome }} == 'success'
        run: |
          terraform apply -auto-approve -var-file=vars/prod.tfvars
          echo "::set-output name=model_bucket::$(terraform output model_bucket | xargs)"
          echo "::set-output name=lambda_function::$(terraform output lambda_function | xargs)"
